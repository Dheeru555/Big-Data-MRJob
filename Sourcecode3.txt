from mrjob.step import MRStep
import csv
import operator
import io

output=[]
l = 0
class MRMostUsedWord(MRJob):
    def mapper_get_words(self,_,tweet):
        with io.open('/home/ubuntu/mrjob/WhiteHouse-WAVES-2012.csv', encoding="latin-1") as cvsfile:
            reader = csv.DictReader(cvsfile)
            if l == 0:
                for i,row in enumerate(reader):
                    global l
                    l = 1
                    yield '%s %s %s' % (row['NAMELAST'],row['NAMEFIRST'],row['NAMEMID']), 1

    def reducer_count_words(self, word, counts):
        yield None, (sum(counts),word)

    def reducer_find_Top_Visitors(self,_,word_cnt):
        yield max(word_cnt)


    def steps(self):
        return [
            MRStep(mapper=self.mapper_get_words,reducer=self.reducer_count_words),MRStep(reducer=self.reducer_find_Top_Visitors)
        ]


if __name__ == '__main__':
    MRMostUsedWord.run()